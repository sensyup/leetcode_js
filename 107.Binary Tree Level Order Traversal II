/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
 //广度优先写法
var levelOrderBottom = function(root) {
    if(!root) return [];
    let number=new Array();
    let curnode=new Array();
    let curval=new Array();
    curnode.push(root);
    curval.push(root.val);
    number.push(curval);
    while(curnode.length!=0){
        let curval=new Array();
        let len=curnode.length;
        for(let i=0;i<len;i++){
            let p=curnode[0];
            curnode.splice(0,1);
            if(p.left) {curnode.push(p.left); curval.push(p.left.val);}
            if(p.right) {curnode.push(p.right); curval.push(p.right.val);}
        }
        if(curval.length!=0) number.push(curval);
    }
    return number.reverse();
};
//深度优先写法
var levelOrderBottom = function(root) {
    let number=[];
    help(root,0,number);
    number.reverse();
    return number;
    function help(node,level,number){
        if(!node) return;
        if(!number[level]) number[level]=[];
        number[level].push(node.val);
        help(node.left,level+1,number);
        help(node.right,level+1,number);
    }
};
