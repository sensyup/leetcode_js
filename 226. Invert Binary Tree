/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {TreeNode}
 */
var invertTree = function(root) {
    if(!root) return null;
    let temp=invertTree(root.left);
    root.left=invertTree(root.right);
    root.right=temp;
    return root;
};

//递归算法
var invertTree = function(root) {
    if(!root) return null;
    let stack=[];
    stack.push(root);
    while(stack.length!=0){
        
        let node=stack.pop();
        if(node){
            stack.push(node.left);
            stack.push(node.right);
            let temp=node.left;
            node.left=node.right;
            node.right=temp;
        }
    }
    return root;
};
